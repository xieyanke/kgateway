// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// BedrockConfigApplyConfiguration represents a declarative configuration of the BedrockConfig type for use
// with apply.
type BedrockConfigApplyConfiguration struct {
	Auth      *AwsAuthApplyConfiguration            `json:"auth,omitempty"`
	Model     *string                               `json:"model,omitempty"`
	Region    *string                               `json:"region,omitempty"`
	Guardrail *AWSGuardrailConfigApplyConfiguration `json:"guardrail,omitempty"`
}

// BedrockConfigApplyConfiguration constructs a declarative configuration of the BedrockConfig type for use with
// apply.
func BedrockConfig() *BedrockConfigApplyConfiguration {
	return &BedrockConfigApplyConfiguration{}
}

// WithAuth sets the Auth field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Auth field is set to the value of the last call.
func (b *BedrockConfigApplyConfiguration) WithAuth(value *AwsAuthApplyConfiguration) *BedrockConfigApplyConfiguration {
	b.Auth = value
	return b
}

// WithModel sets the Model field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Model field is set to the value of the last call.
func (b *BedrockConfigApplyConfiguration) WithModel(value string) *BedrockConfigApplyConfiguration {
	b.Model = &value
	return b
}

// WithRegion sets the Region field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Region field is set to the value of the last call.
func (b *BedrockConfigApplyConfiguration) WithRegion(value string) *BedrockConfigApplyConfiguration {
	b.Region = &value
	return b
}

// WithGuardrail sets the Guardrail field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Guardrail field is set to the value of the last call.
func (b *BedrockConfigApplyConfiguration) WithGuardrail(value *AWSGuardrailConfigApplyConfiguration) *BedrockConfigApplyConfiguration {
	b.Guardrail = value
	return b
}

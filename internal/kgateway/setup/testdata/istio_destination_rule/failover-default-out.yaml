clusters:
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_default_kubernetes_443
  type: EDS
- commonLbConfig:
    healthyPanicThreshold: {}
    localityWeightedLbConfig: {}
  connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_gwtest_reviews_8080
  outlierDetection:
    baseEjectionTime: 30s
    consecutive5xx: 2
    interval: 5s
    maxEjectionPercent: 100
  type: EDS
  upstreamConnectionOptions:
    tcpKeepalive:
      keepaliveInterval: 55
      keepaliveProbes: 6
      keepaliveTime: 44
endpoints:
- clusterName: kube_gwtest_reviews_8080
  endpoints:
  - lbEndpoints:
    - endpoint:
        address:
          socketAddress:
            address: 10.244.1.11
            portValue: 8080
      loadBalancingWeight: 1
    loadBalancingWeight: 1
    locality:
      region: r1
      subZone: r1z2s3
      zone: r1z2
  - lbEndpoints:
    - endpoint:
        address:
          socketAddress:
            address: 10.244.2.14
            portValue: 8080
      loadBalancingWeight: 1
    loadBalancingWeight: 1
    locality:
      region: r1
      subZone: r1z2s4
      zone: r1z2
    priority: 1
  - lbEndpoints:
    - endpoint:
        address:
          socketAddress:
            address: 10.244.3.3
            portValue: 8080
      loadBalancingWeight: 1
    loadBalancingWeight: 1
    locality:
      region: r1
      subZone: r1z3s4
      zone: r1z3
    priority: 2
  - lbEndpoints:
    - endpoint:
        address:
          socketAddress:
            address: 10.244.4.4
            portValue: 8080
      loadBalancingWeight: 1
    loadBalancingWeight: 1
    locality:
      region: r2
      subZone: r2z1s1
      zone: r2z1
    priority: 3
listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 8080
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~8080
        statPrefix: http
        useRemoteAddress: true
    name: listener~8080
  name: listener~8080
routes:
- ignorePortInHostMatching: true
  name: listener~8080
  virtualHosts:
  - domains:
    - www.example.com
    name: listener~8080~www_example_com
    routes:
    - match:
        prefix: /
      name: listener~8080~www_example_com-route-0-httproute-http-gwtest-0-0-matcher-0
      route:
        cluster: kube_gwtest_reviews_8080
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR

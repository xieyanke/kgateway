clusters:
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_default_kubernetes_443
  type: EDS
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_gwtest_reviews_8080
  type: EDS
endpoints:
- clusterName: kube_gwtest_reviews_8080
  endpoints:
  - lbEndpoints:
    - endpoint:
        address:
          socketAddress:
            address: 10.244.1.11
            portValue: 8080
      loadBalancingWeight: 1
    loadBalancingWeight: 1
    locality:
      region: r1
      subZone: r1z2s3
      zone: r1z2
listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 8080
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - disabled: true
          name: transformation
          typedConfig:
            '@type': type.googleapis.com/envoy.api.v2.filter.http.FilterTransformations
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~8080
        statPrefix: http
        useRemoteAddress: true
    name: listener~8080
  metadata:
    filterMetadata:
      merge.TrafficPolicy.gateway.kgateway.dev:
        transformation:
        - gateway.kgateway.dev/TrafficPolicy/gwtest/transform-for-gateway
  name: listener~8080
routes:
- ignorePortInHostMatching: true
  metadata:
    filterMetadata:
      merge.TrafficPolicy.gateway.kgateway.dev:
        transformation:
        - gateway.kgateway.dev/TrafficPolicy/gwtest/transform-for-gateway
  name: listener~8080
  typedPerFilterConfig:
    transformation:
      '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
      transformations:
      - requestMatch:
          responseTransformation:
            transformationTemplate:
              body:
                text: '{{ body }}'
              headersToAppend:
              - key: original-greatness
                value:
                  text: '{{request_headers("x-greatness")}}'
  virtualHosts:
  - domains:
    - www.example.com
    name: listener~8080~www_example_com
    routes:
    - match:
        prefix: /
      name: listener~8080~www_example_com-route-0-httproute-happypath-gwtest-0-0-matcher-0
      route:
        cluster: kube_gwtest_reviews_8080
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
